import{a as U,c as W,d as _}from"./chunk-H6VYLFP2.js";import{$ as O,E as u,Ka as A,Pb as x,Q as f,Ra as N,Rb as L,Ta as S,W as M,Z as I,a as T,aa as g,ab as P,ba as k,e as w,h as E,ia as D,na as R,p as h,x as c,y as C,yb as j,zb as F}from"./chunk-SHUJRWSQ.js";var V=[{path:"",redirectTo:"/auth/request-otp",pathMatch:"full"},{path:"auth/request-otp",loadComponent:()=>import("./chunk-E6KAAGYA.js").then(n=>n.RequestOtpComponent)},{path:"auth/verify-otp",loadComponent:()=>import("./chunk-VF72MDN7.js").then(n=>n.VerifyOtpComponent)}];var m="Service workers are disabled or not supported by this browser",l=class{serviceWorker;worker;registration;events;constructor(o,t){if(this.serviceWorker=o,!o)this.worker=this.events=this.registration=new w(r=>r.error(new Error(m)));else{let r=null,e=new E;this.worker=new w(p=>(r!==null&&p.next(r),e.subscribe(v=>p.next(v))));let s=()=>{let{controller:p}=o;p!==null&&(r=p,e.next(r))};o.addEventListener("controllerchange",s),s(),this.registration=this.worker.pipe(f(()=>o.getRegistration()));let i=new E;this.events=i.asObservable();let a=p=>{let{data:v}=p;v?.type&&i.next(v)};o.addEventListener("message",a),t?.get(S,null,{optional:!0})?.onDestroy(()=>{o.removeEventListener("controllerchange",s),o.removeEventListener("message",a)})}}postMessage(o,t){return new Promise(r=>{this.worker.pipe(u(1)).subscribe(e=>{e.postMessage(T({action:o},t)),r()})})}postMessageWithOperation(o,t,r){let e=this.waitForOperationCompleted(r),s=this.postMessage(o,t);return Promise.all([s,e]).then(([,i])=>i)}generateNonce(){return Math.round(Math.random()*1e7)}eventsOfType(o){let t;return typeof o=="string"?t=r=>r.type===o:t=r=>o.includes(r.type),this.events.pipe(C(t))}nextEventOfType(o){return this.eventsOfType(o).pipe(u(1))}waitForOperationCompleted(o){return new Promise((t,r)=>{this.eventsOfType("OPERATION_COMPLETED").pipe(C(e=>e.nonce===o),u(1),h(e=>{if(e.result!==void 0)return e.result;throw new Error(e.error)})).subscribe({next:t,error:r})})}get isEnabled(){return!!this.serviceWorker}},G=(()=>{class n{sw;messages;notificationClicks;subscription;get isEnabled(){return this.sw.isEnabled}pushManager=null;subscriptionChanges=new E;constructor(t){if(this.sw=t,!t.isEnabled){this.messages=c,this.notificationClicks=c,this.subscription=c;return}this.messages=this.sw.eventsOfType("PUSH").pipe(h(e=>e.data)),this.notificationClicks=this.sw.eventsOfType("NOTIFICATION_CLICK").pipe(h(e=>e.data)),this.pushManager=this.sw.registration.pipe(h(e=>e.pushManager));let r=this.pushManager.pipe(f(e=>e.getSubscription()));this.subscription=new w(e=>{let s=r.subscribe(e),i=this.subscriptionChanges.subscribe(e);return()=>{s.unsubscribe(),i.unsubscribe()}})}requestSubscription(t){if(!this.sw.isEnabled||this.pushManager===null)return Promise.reject(new Error(m));let r={userVisibleOnly:!0},e=this.decodeBase64(t.serverPublicKey.replace(/_/g,"/").replace(/-/g,"+")),s=new Uint8Array(new ArrayBuffer(e.length));for(let i=0;i<e.length;i++)s[i]=e.charCodeAt(i);return r.applicationServerKey=s,new Promise((i,a)=>{this.pushManager.pipe(f(d=>d.subscribe(r)),u(1)).subscribe({next:d=>{this.subscriptionChanges.next(d),i(d)},error:a})})}unsubscribe(){if(!this.sw.isEnabled)return Promise.reject(new Error(m));let t=r=>{if(r===null)throw new Error("Not subscribed to push notifications.");return r.unsubscribe().then(e=>{if(!e)throw new Error("Unsubscribe failed!");this.subscriptionChanges.next(null)})};return new Promise((r,e)=>{this.subscription.pipe(u(1),f(t)).subscribe({next:r,error:e})})}decodeBase64(t){return atob(t)}static \u0275fac=function(r){return new(r||n)(O(l))};static \u0275prov=M({token:n,factory:n.\u0275fac})}return n})(),z=(()=>{class n{sw;versionUpdates;unrecoverable;get isEnabled(){return this.sw.isEnabled}constructor(t){if(this.sw=t,!t.isEnabled){this.versionUpdates=c,this.unrecoverable=c;return}this.versionUpdates=this.sw.eventsOfType(["VERSION_DETECTED","VERSION_INSTALLATION_FAILED","VERSION_READY","NO_NEW_VERSION_DETECTED"]),this.unrecoverable=this.sw.eventsOfType("UNRECOVERABLE_STATE")}checkForUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(m));let t=this.sw.generateNonce();return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES",{nonce:t},t)}activateUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(m));let t=this.sw.generateNonce();return this.sw.postMessageWithOperation("ACTIVATE_UPDATE",{nonce:t},t)}static \u0275fac=function(r){return new(r||n)(O(l))};static \u0275prov=M({token:n,factory:n.\u0275fac})}return n})();var H=new I("");function Y(){let n=g(b);if(!("serviceWorker"in navigator&&n.enabled!==!1))return;let o=g(H),t=g(R),r=g(S);t.runOutsideAngular(()=>{let e=navigator.serviceWorker,s=()=>e.controller?.postMessage({action:"INITIALIZE"});e.addEventListener("controllerchange",s),r.onDestroy(()=>{e.removeEventListener("controllerchange",s)})}),t.runOutsideAngular(()=>{let e,{registrationStrategy:s}=n;if(typeof s=="function")e=new Promise(i=>s().subscribe(()=>i()));else{let[i,...a]=(s||"registerWhenStable:30000").split(":");switch(i){case"registerImmediately":e=Promise.resolve();break;case"registerWithDelay":e=B(+a[0]||0);break;case"registerWhenStable":e=Promise.race([r.whenStable(),B(+a[0])]);break;default:throw new Error(`Unknown ServiceWorker registration strategy: ${n.registrationStrategy}`)}}e.then(()=>navigator.serviceWorker.register(o,{scope:n.scope}).catch(i=>console.error("Service worker registration failed with:",i)))})}function B(n){return new Promise(o=>setTimeout(o,n))}function $(n,o){return new l(n.enabled!==!1?navigator.serviceWorker:void 0,o)}var b=class{enabled;scope;registrationStrategy};function K(n,o={}){return k([G,z,{provide:H,useValue:n},{provide:b,useValue:o},{provide:l,useFactory:$,deps:[b,D]},N(Y)])}var q={providers:[j({eventCoalescing:!0}),W(V,_()),L(),K("ngsw-worker.js",{enabled:!F(),registrationStrategy:"registerWhenStable:30000"})]};var y=class n{title="auth-ui";static \u0275fac=function(t){return new(t||n)};static \u0275cmp=A({type:n,selectors:[["app-root"]],decls:1,vars:0,template:function(t,r){t&1&&P(0,"router-outlet")},dependencies:[U],encapsulation:2})};x(y,q).catch(n=>console.error(n));
